Enable a Full Test Environment:

Provides a controlled, containerized setup for testing the Rust-based BTCZ node without requiring manual system configuration.
Ensures compatibility with networking, RPC functionality, and blockchain operations.
Streamline Deployment:

Simplifies the deployment of the Rust-based node and its auxiliary services for developers, node operators, and testers.
Provides an easy way to run the Rust implementation locally or in the cloud using Docker.
Support Integration and Development:

Allows integration testing between the Rust-based BTCZ node and other components (e.g., seed nodes, RPC clients).
Serves as a development environment for auxiliary services like block explorers or wallet APIs.
Consistency:

Maintains uniformity in configurations and scripts, ensuring the Rust translation adheres to the same architectural values as the original BTCZ implementation.


WHAT THIS WILL ALLOW YOU TO DO:

Test the Rust Node in Isolation:

Validate that the Rust implementation can operate as a full BTCZ node, handling block propagation, transaction validation, and RPC commands.
Interact with Auxiliary Services:

Use RPC clients to interact with the node, allowing you to simulate wallet operations, block queries, and network synchronization.
Prepare for Deployment:

Provides the groundwork for integrating the Rust implementation into the BTCZ mainnet by testing it under near-production conditions.
Experiment with New Features:

The modularity of Docker enables you to extend this setup with additional services, such as a Rust-based blockchain explorer, without affecting the core node.

TO BUILD AND RUN THE DOCKER ENVIRONMENT:

BUILD THE DOCKER IMAGE:

bash
Copy code
docker-compose build
START THE SERVICES:

bash
Copy code
docker-compose up -d
CHECK LOGS:

bash
Copy code
docker-compose logs -f
TEST RPC COMMANDS: USE CURL OR ANY RPC CLIENT TO TEST:

bash
Copy code
curl --user btczrpc:supersecurepassword --data-binary '{"jsonrpc":"1.0","id":"curltest","method":"getblockchaininfo","params":[]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/
